// <auto-generated />
using System;
using Autosalon.WebHost.Infrastrucure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Autosalon.WebHost.Infrastructure.Migrations
{
    [DbContext(typeof(AutosalonContext))]
    [Migration("20210405151122_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Autosalon.WebHost.Infrastrucure.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainImage")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Mark")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("Autosalon.WebHost.Infrastrucure.Characteristics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DriveUnit")
                        .HasColumnType("int");

                    b.Property<decimal?>("EngineVolume")
                        .HasColumnType("decimal(3, 1)");

                    b.Property<int?>("Fuel")
                        .HasColumnType("int");

                    b.Property<int?>("Horsepower")
                        .HasColumnType("int");

                    b.Property<int>("IdCar")
                        .HasColumnType("int");

                    b.Property<int?>("Transmission")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DriveUnit");

                    b.HasIndex("Fuel");

                    b.HasIndex("IdCar")
                        .IsUnique()
                        .HasName("AK_IdCar");

                    b.HasIndex("Transmission");

                    b.ToTable("Characteristics");
                });

            modelBuilder.Entity("Autosalon.WebHost.Infrastrucure.DriveUnitType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("DriveUnitType");
                });

            modelBuilder.Entity("Autosalon.WebHost.Infrastrucure.FuelType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("FuelType");
                });

            modelBuilder.Entity("Autosalon.WebHost.Infrastrucure.MarkAndModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Mark")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("MarkAndModel");
                });

            modelBuilder.Entity("Autosalon.WebHost.Infrastrucure.TransmissionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("TransmissionType");
                });

            modelBuilder.Entity("Autosalon.WebHost.Infrastrucure.Characteristics", b =>
                {
                    b.HasOne("Autosalon.WebHost.Infrastrucure.DriveUnitType", "DriveUnitNavigation")
                        .WithMany("Characteristics")
                        .HasForeignKey("DriveUnit")
                        .HasConstraintName("FK_Characteristics_DriveUnitType");

                    b.HasOne("Autosalon.WebHost.Infrastrucure.FuelType", "FuelNavigation")
                        .WithMany("Characteristics")
                        .HasForeignKey("Fuel")
                        .HasConstraintName("FK_Characteristics_FuelType");

                    b.HasOne("Autosalon.WebHost.Infrastrucure.Car", "IdCarNavigation")
                        .WithOne("Characteristics")
                        .HasForeignKey("Autosalon.WebHost.Infrastrucure.Characteristics", "IdCar")
                        .HasConstraintName("FK_Characteristics_Car")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Autosalon.WebHost.Infrastrucure.TransmissionType", "TransmissionNavigation")
                        .WithMany("Characteristics")
                        .HasForeignKey("Transmission")
                        .HasConstraintName("FK_Characteristics_TransmissionType");
                });
#pragma warning restore 612, 618
        }
    }
}
